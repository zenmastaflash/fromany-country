generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum DocumentType {
  PASSPORT
  VISA
  TAX_RETURN
  DRIVERS_LICENSE
  RESIDENCY_PERMIT
  BANK_STATEMENT
  INSURANCE
  TRAVEL
  OTHER
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  emailVerified DateTime?
  image         String?
  documents     Document[]
  accounts      Account[]
  sessions      Session[]
}

model Document {
  id             String       @id @default(cuid())
  userId         String
  type           DocumentType @default(OTHER)
  status         String       @default("active")
  title          String
  number         String?
  issueDate      DateTime?
  expiryDate     DateTime
  issuingCountry String?
  fileName       String?
  fileUrl        String?
  metadata       Json?
  tags           String[]     @default([])
  sharedWith     String[]     @default([])
  version        Int          @default(1)
  user           User         @relation(fields: [userId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}
